---

# Boostrap Pipeline
# Creates other unique pipelines on change detection
#
# Update from CLI:
# fly -t limbic set-pipeline -p cdpt-bootstrap -c bootstrap.yml --load-vars-from ../credentials.yml
#

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

- name: concourse-pipeline
  type: docker-image
  source:
    repository: concourse/concourse-pipeline-resource

resources:
###
# Github, Release, and Pull Request resources
###
- name: repo
  type: git
  source:
    uri: {{github-uri}}
    branch: {{github-branch}}
    paths:
      - pipes

- name: git-pr
  type: pull-request
  check_every: 24h
  webhook_token: {{webhook-token}}
  source:
    repository: limbicmedia/concourse-dynamic-pipe-test
    access_token: {{github-access-token}}

###
# Docker images
###
- name: alpine-node
  type: docker-image
  source:
    repository: mhart/alpine-node
    tag: latest

###
# Concourse pipeline resources
###

- name: my-pipelines
  type: concourse-pipeline
  source:
    target: https://ci.limbicmedia.ca
    insecure: "false"
    teams:
      - name: main
        username: limbic
        password: bGltYmlj


jobs:
- name: test
  plan:
  - get: repo
    trigger: false
  - get: git-pr
    trigger: true
  - get: alpine-node
    params: {save: true}
  - task: run-test
    params:
      skip_download: true
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: mhart/alpine-node
          tag: latest
      inputs:
        - name: repo
        - name: git-pr
      outputs:
        - name: task-output
      run:
        path: sh
        args:
          - -exc
          - |
            apk add jq --update --no-cache

            cat ./git-pr/.git/resource/version.json | jq
            
            mkdir -p ./task-output

            PIPELINE_NAME=cdpt-pr-$(cat ./git-pr/.git/resource/version.json | jq .pr -r)
            echo "pipeline-name: $PIPELINE_NAME" >> ./task-output/pipeline-vars


            

            cat > task-output/pipeline-file <<EOF
            pipelines:
              - name: $PIPELINE_NAME
                team: main
                paused: true
                config_file: git-pr/pipes/dynamic.yml
                vars_files:
                  - task-output/pipeline-vars
            EOF

            cat ./task-output/pipeline-file

            cat ./task-output/pipeline-vars


  - put: my-pipelines
    params:
      pipelines_file: task-output/pipeline-file
      #pipelines:
      #  - name: cdpt-dynamic
      #    team: main
      #    paused: true
      #    config_file: git-pr/pipes/dynamic.yml
      #    vars_files:
      #      - task-output/pipeline-vars






